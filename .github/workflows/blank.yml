name: Act-On Contact Import Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run Act-On Contact Import
        env:
          CLIENT_ID: "tiNjJxcncdfBtlx85SsdaV51RrzWGbdY"
          CLIENT_SECRET: "KXuR87le3QAzUNwKRVHhh_Vdd4YwqgHY7FxDGgo_KLdSmRAMo_w9hx2JYn3P47uw"
        run: |
          python <<EOF
          import requests
          import os

          try:
              # Act-On API credentials
              CLIENT_ID = os.getenv('CLIENT_ID')
              CLIENT_SECRET = os.getenv('CLIENT_SECRET')

              if not CLIENT_ID or not CLIENT_SECRET:
                  print("Error: CLIENT_ID or CLIENT_SECRET is missing.")
                  exit(1)

              print("Client ID and Secret loaded successfully.")

              # Act-On API URL
              account_id = 45241  # Replace with your actual Act-On account ID
              import_definition_id = "your_import_definition_id"  # Replace with your actual import definition ID
              url = f"https://api.actonsoftware.com/ucl/v2/{account_id}/import/contacts/{import_definition_id}"

              # Step 1: Authenticate and get an access token
              auth_url = "https://restapi.actonsoftware.com/auth"
              auth_data = {
                  "clientId": CLIENT_ID,
                  "clientSecret": CLIENT_SECRET
              }

              print("Sending authentication request...")
              auth_response = requests.post(auth_url, data=auth_data)

              if auth_response.status_code != 200:
                  print("Authentication failed:", auth_response.status_code, auth_response.text)
                  exit(1)

              # Get the token from the response
              token = auth_response.json().get("token")

              if not token:
                  print("Error: Failed to retrieve authentication token.")
                  exit(1)

              print("Authentication successful. Token received.")

              # Step 2: Define the headers with authorization
              headers = {
                  "accept": "application/json",
                  "content-type": "application/json",
                  "Authorization": f"Bearer {token}"  # Add the Bearer token for authentication
              }

              # Step 3: Define the data to be sent in the body (example contact data)
              data = {
                  "contacts": [
                      {
                          "email": "john.doe@example.com",
                          "firstName": "John",
                          "lastName": "Doe",
                          "company": "Example Corp",
                          "webinarName": "ON24_Webinar_12345"
                      },
                      {
                          "email": "jane.doe@example.com",
                          "firstName": "Jane",
                          "lastName": "Doe",
                          "company": "Example Corp",
                          "webinarName": "ON24_Webinar_12345"
                      }
                  ]
              }

              print("Sending contact import request...")
              response = requests.post(url, json=data, headers=headers)

              # Check response status and print result
              if response.status_code == 200:
                  print("Contacts imported successfully:", response.text)
              else:
                  print("Failed to import contacts:", response.status_code, response.text)
                  exit(1)

          except Exception as e:
              print(f"An unexpected error occurred: {str(e)}")
              exit(1)
          EOF
